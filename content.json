{"meta":{"title":"Hexo","subtitle":null,"description":"仰面朝天，知此身渺渺，沧海一粟","author":"刘奶奶找牛奶奶买榴莲牛奶","url":"https://github.com/RShit","root":"/"},"pages":[],"posts":[{"title":"词汇APP后台","slug":"汇APP后台","date":"2019-05-14T10:29:26.000Z","updated":"2019-05-14T10:29:49.724Z","comments":true,"path":"2019/05/14/汇APP后台/","link":"","permalink":"https://github.com/RShit/2019/05/14/汇APP后台/","excerpt":"","text":"词汇APP所有接口微信接口微信报名登记服务 EnrollController save： 保存数据，保存数据是判断请求ip数量，如果过多(≥50)即提示访问过于频繁。 EnrollService save 参数：jsonObj，用户信息 bean类：OthWeinxEnroll，对应数据库表名：oth_weinx_enroll，保存微信报名信息 向报名人发送邮件提示报名成功。 app接口全部类： commom aop：拦截器 FrontApiAuthInterceptor：所有app接口拦截器，判断是否已登录 FrontLoginInterceptor：从被拦截controller中获取cookie中的数据，如果没数据则删除session，否则自动登录 FrontWebAuthInterceptor：所有web页面接口的拦截器，判断是否登录，如果没登录则跳转至登录界面 GlobalInterceptor：日志记录 controller FrontBaseController_NeedLoginApi：获取登录用户信息，及更新登录用户状态，处理分页信息获取每页返回的记录数如果超出1000条只返回1000 FrontBaseController_Open：从被拦截controller中获取cookie中的数据，如果没数据则删除session，否则自动登录。 enumerate：全部数据枚举类 ClzStatus：班级状态枚举类：0:未发布 1:报名中 2:上课中 3: 维护 4: 已经删除 10:已经结束 GroupType：班级状态GROUP_STATUS 1 班级类型 GROUP_TYPE 2 班级创建时间 GROUP_TIME 3 Role：TEACHER 教师 1 ASSISTANT 助教 2 Stu_Class_Status：未付费 0 正常 1 退费 4 UserStatus：正常 1 删除 -4 被锁定 -1 注册未激活 0 UserType：管理员 1 教师 2 助教 3 学生 4 global：系统全局配置变量 CC_User：完美计划的用户系统常量定义类 G：推送、分享、广告(得到启动图的接口， 广告图接口) PplanJFinalConfig:系统启动类 learning CommonLearningInfoController：继承FrontBaseController_NeedLoginApi类，接口/common/learning/info/ 映射的公用学习信息API Controller login：实现系统登录的所有文件夹 RegisterService：注册接口 loginOrResginByWx：微信注册用户 参数：String wxOpenId, String wxNickName, int sex, String avator, String unionId 实现思路： 判断unionId为空时取将wxOpenId的值赋给unionId 通过wxOpenId获取用户信息，如果用户存在则修改头像、WxUnionId后更新用户信息，如不存在则保存新的用户信息，最后返回用户信息。 loginOrResginByWb：微版注册用户 参数：String wbOpenId, String wbNickName, int sex, String avator 实现思路：通过wbOpenId获取用户信息，如果用户存在则直接返回用户信息，如不存在则保存新的用户信息后返回用户信息。 boundPhoneNumber：绑定手机业务，如果手机号被绑定过，直接把wxOpenId覆盖到原来的账号上，并把此uid数据真删除 参数：int uid, String phoneNumber 实现过程：通过手机号查找用户信息，如果可以查到在，则将新的用户信息赋值给旧的用户信息，后修改旧的用户信息，删除新信息。否则直接将手机号添加至新账号。 loginOrResginByPhone：通过手机号注册返回用户信息 参数：String phoneNumber model：登录用到的model类 router：配置登录接口对应的controller ApiFrontRoutes_Pplan：配置登录接口对应的controller user：用户信息处理类 UserService：用户信息处理类 util：公共工具类 AjaxUtil：ajax处理类 CommonUtil：数据处理类 DataFormatUtil：数据处理 UserUtil：用户信息判断工具类 tools：特殊数据处理类 wordapp：单词数据处理 adminsiste：管理员处理 base：基本信息处理 BaseController：基本信息处理 editUser：修改信息 getUserList：获取用户列表 loadDropdown：加载下拉菜单 getClassList：加载班级数据 updateStatus：更改班级状态 getUserInfo：获取用户信息 changeUserStatus：变更用户状态 addClassOrEdit：添加班级或修改 returnsClzName：返回班级名称 getStuList：返回班级学生列表 updateClzStu：修改班级学生状态 addClzStuOrEdit：班级添加学生或修改学生信息 getUserClz：返回班级学生信息 getClz：回写班级信息 teaLoadDropdown：教师、助教 获取下拉列表 getTeaClassList：教师、助教 下获取表格 BaseService：基本信息处理具体实现类 同controller方法 classmanage：班级管理 ClassManageController：班级管理 userStudyDetail：获取用户学习详情 toeflTarget：托福目标成绩 toeflGrade：托福成绩 getRecentTarget： chunkLearnDetail：学习情况–语块 wordLearnDetail：学习情况-词汇 unitLearnDetail：学习情况–单元 wordsInfor：单词学习情况 wrongInfor：错误 tagFilter：过滤标签 getTitle：页面标题 getTypeList：所有类别— 初学、重学.. getUserInfor：汇总信息 levelLearnTime：学习耗时 unitLearnTime：每个单元的耗时情况 classInfor：班级的具体信息 classStuInfor：班级下所有学生信息 classStuInfor：管理员收藏的学生 addFavorUser：添加收藏 delteFavorUser：取消收藏 favorClazz：管理员收藏的班级 addFavorClazz：收藏 delteFavorClazz：取消收藏 classList:全部班级 userRecordList：用户的使用记录 recordTypeList：使用记录的类别— 初学、重学.. getDefautlDateRange：获取系统默认的时间范围，目前是当前时间到一个月前 levelList：所有level areanRecordTable：用户打擂详情 pkRecordTable：用户pk详情 ClassManageService：班级管理具体实现 方法同上 common：拦截器、路由配置等 menu：菜单管理 model：管理员处理的所有model operationdata：系统数据处理 SystemUserDataControllor getSystemUserTJ：获取系统用户情况的统计信息 getDefautlDateRange：获取系统默认的显示数据的时间范围 SystemUserDataService 方法同上 UsageDetailsControllor loadDropDown： 返回下拉列表 getDetailsList： 返回学习明细列表 studyInfor:学习信息管理 StudyInforContorller： levelList：所有level unitList：全部单元 classList：全部班级 wordList：全部单词 wordWrongDetail：错误单词详情 arena：打擂接口 controller ArenaListController：提供擂台相关列表接口 currentDLList：获取当前打擂人数(含个人打擂、应战打擂信息) todayRankList：获取今日排行榜 totalRankList：获取总排行榜 recentPkList：获取PK动态信息 myPKList：获取我的PK记录 pkMilitaryExploitsList：获取战绩排行榜信息 mySinglePKList：获取 我的打擂记录 ArenaProcessController：提供擂台PK过程中处理接口 reqOpponentList：获取对手信息列表 launchSingleArena：发起个人打擂 launchPKArena：发起PK打擂 reqPkArenaRecord：获取应战擂台信息 submitSingleArenaRecord：单人打擂提交数据 submitPKArenaRecord：获取应战擂台信息 reqPkReport：获取擂台PK结果集 reqSinglePkReport：获取擂台PK结果集 reqPKList：获取应战列表 toUserCancelPK：应战者取消应战 submitDeviceNumber：上报设备名称 service ArenaListService：提供当前正在打擂记录、今日排行、总排行、PK动态、PK战绩、我的打擂记录的数据 ArenaProcessService：提供打擂过程中的业务逻辑 bean：实体类 event:事件处理，包括推送，每日任务推送 global：常量及数据初始化 learning：学习信息处理 bean：数据实体类 controller：接口处理 LearningInfoController：学习信息 levelList：词汇和语块： 所有级别学习概况 oneSubLevel：一个subLevel的概况信息，根据登录用户，如果没有开启的级别，返回错误代码 unit list页面拆分的一部分数据 unitList：获取一个学生在一个SubLevel的下所有unit list概况，没有开启的unit，无userUnitRel关联对象数据 userSubLevelReport:用户的一个具体级别(subLevel)的学习报告数据 userUnitReport:单元报告 unitListInLevel0:Level 0的unit list wordsInUnit:”Level 0 的某个unit下的所有单词 clearCache: 清理缓存 subLevelTarget： LearningProcessController：正在学习 userUnitIndexData：用户点击一个unit进入获取得到的数据 userUnitSubmitSelectedKnownWords:提交熟词选择 （不是测试提交） userUnitSubmitKnownWordsTestData:用户提交熟词测试数据 getUserUnitKnownWordsData:获取用户在一个unit熟词测试数据,只有在熟词测试全部提交之后，才能访问 getLearnDataFromUserGroup:得到一个userGroup下的学习资源、学习数据, 参数为 groupId getUserGroupReport:得到一个userGroup的学习报告数据 submitUserGroupTestData:得到一个userGroup的学习报告数据 submitUserGroupViewData:学习6步前面3步浏览操作，每步结束的一个数据提交 doFavOpt:学习6步前面3步浏览操作，每步结束的一个数据提交 getWordCardData:通过wordId得到一个单独的单词卡片 getCorpusFull:通过wordId得到一个单独的单词卡片 wordCardViewStatSubmit:除了学习6步的查看卡片之外，其他地方点击单词卡片进入之后提交一个浏览统计的数据 LearningReviewController：复习 subLevelIndexData:一个subLevel下复习首页列表数据 unitList：SubLevel的复习index页面，一个SubLevel的下所有复习unit list概况 wordListInOneUnit：点击我的错词/智能推荐/我的收藏下的一个unit或全部，进入获取的单词数据 beginOneUnitReview：开始复习一个单元 submitUnitReviewData：提交一次复习的数据 oneUnitReviewReport：一次复习的报告 service：具体实现 main：运行main函数可以修正 UserUnitRel 的 takeTime 和 reviewTakeTime 错误数据 makedata：制造数据 DataPrepareService：初始化数据 DataPrepareService：造一个能看所有单词数据的账户 model：数据实体类 person：个人中心 controller： PersonalController： toeflGrade：目标成绩及成绩列表 addToeflGrade：录入成绩 deleteToeflGrade：删除成绩 addTargetToeflScore：添加目标成绩 targetToeflScore：查看目标成绩 addFeedback：反馈 legalProvision：规定 userInfo：用户信息 modifyShowNameAndSex：修改名字及性别 studyProgressInfo：学习进度 uploadAvator：修改头像 service：具体实现 share bean：分享实体类 controller：分享接口 ShareContentController：分享内容接口 reqShareContent：获取分享内容 addPraiseCount：添加点击赞的统计与详细信息 reqLJimgBaseUrl：获取连击 fnReqWechatServiceImgUrl：获取微信公共号关注二维码图片地址 ShareController：分享接口 shearArenaReport：擂台分享 shareLearningReport：单元学习分享 service：具体实现 tongji：所有后台统计数据的service util admin bean：数据实体类 global：变量 learning： 统计学习数据 word：单词统计 wxsite：微信统计 系统后台接口全部类 adminsite：后台管理 controller：接口 PracticeAdminController getClassList：获取班级列表 getClassStudent：获取班级下的学生 getStuLevelDetails：学生level完成详情 getErrorDetails：错误详情 getUserGroup：获取用户答过的 group getUnitName：获取unitName loadReportList：获取报表列表 loadReportContent：获取报表详细信息 model：数据实体类 service：具体实现 common：公共拦截器处理 practice：课后练习 controller： PracticeController levelList：获取Level列表 userUnitList：获取单元列表 userUnitPartList：获取单元对应的Part的信息 loadQuestion：加载测试试题 loadQuestionPartGroup：加载part的分组信息 submitAnswer：提交数据 loadReportList：获取报表列表 loadReportContent：获取报表详细信息 getUserName：获取登录用户 userExit：用户退出 getUnitName：获取unitName model：数据实体类 service：具体实现 tools.export.exam bean:数据实体类 ExamServic:数据导出","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"opencv参考链接","slug":"pencv参考链接","date":"2019-05-06T09:18:14.000Z","updated":"2019-05-06T10:07:25.917Z","comments":true,"path":"2019/05/06/pencv参考链接/","link":"","permalink":"https://github.com/RShit/2019/05/06/pencv参考链接/","excerpt":"","text":"基于java的opencv、tesseractc参考链接 Intellij Idea 部署 OpenCV-4.0.0 环境 如何使用Tesseract和OpenCV执行OCR和文本识别 tesseract官方文档 OpenCV Java Tutorials documentation! Tesseract-OCR识别中文与训练字库实例 Tesseract-OCR识别中文与训练字库实例","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"git提交","slug":"it提交","date":"2019-05-06T09:15:16.000Z","updated":"2019-05-06T09:37:10.540Z","comments":true,"path":"2019/05/06/it提交/","link":"","permalink":"https://github.com/RShit/2019/05/06/it提交/","excerpt":"","text":"git提交步骤 git init //初始化仓库 git add .(文件name) //添加文件到本地仓库 git commit -m “first commit” //添加文件描述信息 git remote add origin + 远程仓库地址 //链接远程仓库，创建主分支 git pull origin master // 把本地仓库的变化连接到远程仓库主分支 git push -u origin master //把本地仓库的文件推送到远程仓库 强制提交如果确定代码无误，可以强制提交 git push -f","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"html5 audio配合span data-src-mp3使用","slug":"ntitled","date":"2019-04-26T04:20:30.000Z","updated":"2019-04-26T04:30:40.806Z","comments":true,"path":"2019/04/26/ntitled/","link":"","permalink":"https://github.com/RShit/2019/04/26/ntitled/","excerpt":"","text":"html5 audio配合span data-src-mp3使用编写html代码12345&lt;audio id=&quot;player&quot; style=&quot;display: none&quot;&gt;&lt;/audio&gt;&lt;span class = &apos;1&apos; data-src-mp3=&quot;&quot; data-src-ogg=&quot;&quot;&gt;&lt;/span&gt; &lt;span class = &apos;2&apos; data-src-mp3=&quot;&quot; data-src-ogg=&quot;&quot;&gt;&lt;/span&gt; 初始化span标签123456$(&quot;span.1&quot;) .attr(&quot;data-src-mp3&quot;,&quot;song1.mp3&quot;) .attr(&quot;data-src-ogg&quot;,&quot;song1.ogg&quot;);$(&quot;span.2&quot;) .attr(&quot;data-src-mp3&quot;,&quot;song2.mp3&quot;) .attr(&quot;data-src-ogg&quot;,&quot;song2.ogg&quot;); 控制播放1234567891011121314151617181920212223$(&quot;span[data-src-mp3]&quot;).click(function () &#123; var player = document.getElementById(&quot;player&quot;), $this = $(this); if ($this.hasClass(&quot;selected&quot;)) &#123; if (player.paused) &#123; player.play(); &#125; else &#123; player.pause(); &#125; &#125; else &#123; $(&quot;span[data-src-mp3].selected&quot;).removeClass(&quot;selected&quot;); $this.addClass(&quot;selected&quot;); $(player) .empty() .append($(&quot;&lt;source&gt;&quot;).attr(&quot;src&quot;, $this.attr(&quot;data-src-mp3&quot;))) .append($(&quot;&lt;source&gt;&quot;).attr(&quot;src&quot;, $this.attr(&quot;data-src-ogg&quot;))) // 必须使用load重新加载audio，否则播放audio时，播放出来的还是最初始的资源 player.load(); player.play(); &#125;&#125;);","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"SpringBoot","slug":"ringBoot","date":"2019-03-15T01:54:30.000Z","updated":"2019-03-15T03:12:07.035Z","comments":true,"path":"2019/03/15/ringBoot/","link":"","permalink":"https://github.com/RShit/2019/03/15/ringBoot/","excerpt":"","text":"什么是spring bootSpring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。用我的话来理解，就是spring boot其实不是什么新的框架，它默认配置了很多框架的使用方式，就像maven整合了所有的jar包，spring boot整合了所有的框架（不知道这样比喻是否合适）。 使用spring boot有什么好处其实就是简单、快速、方便！平时如果我们需要搭建一个spring web项目的时候需要怎么做呢？ 1）配置web.xml，加载spring和spring mvc 2）配置数据库连接、配置spring事务 3）配置加载配置文件的读取，开启注解 4）配置日志文件 … 配置完成之后部署tomcat 调试 … 现在非常流行微服务，如果我这个项目仅仅只是需要发送一个邮件，如果我的项目仅仅是生产一个积分；我都需要这样折腾一遍! 但是如果使用spring boot呢？ 很简单，我仅仅只需要非常少的几个配置就可以迅速方便的搭建起来一套web项目或者是构建一个微服务！ 快速入门maven构建项目使用工具：IntelliJ IDEA 2018.3.4、jdk1.8.0_201 在idea界面点击 Create New project,然后点击Next 选择Spring Initializar点击Next 设置初始java包结构点击Next 在此步骤选择springboot集成的其他框架，如mysql然后点击Next 输入项目名称，点击finish即可完成创建springboot项目项目结构如下： src/main/java/: 程序开发及主程序入口 src/main/resources/: 配置文件 src/test: 测试程序 引入web模块1、在pom文件中添加web模块依赖 1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt; pom.xml文件中默认有两个模块： spring-boot-starter：核心模块，包括自动配置支持、日志和YAML； spring-boot-starter-test：测试模块，包括JUnit、Hamcrest、Mockito。 2、编写 HelloWorldController1234567@RestControllerpublic class HelloWorldController &#123; @RequestMapping(\"/hello\") private String hello()&#123; return \"hello world\"; &#125;&#125; @RestController的意思就是controller里面的方法都以json格式输出，不用再写什么jackjson配置的了！ 3、启动主程序在浏览器打开&lt;http://127.0.0.1:8080/hello&gt;,即可看到结果 开发环境的调试springBoot对调试支持很好，修改之后可以实时生效，需要添加以下的配置： 12345678910111213141516171819&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;optional&gt;true&lt;/optional&gt; &lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;fork&gt;true&lt;/fork&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 该模块在完整的打包环境下运行的时候会被禁用。如果你使用java -jar启动应用或者用一个特定的classloader启动，它会认为这是一个“生产环境”。","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"excel数据处理","slug":"xcel数据处理","date":"2019-03-14T02:57:51.000Z","updated":"2019-03-14T03:09:27.293Z","comments":true,"path":"2019/03/14/xcel数据处理/","link":"","permalink":"https://github.com/RShit/2019/03/14/xcel数据处理/","excerpt":"","text":"excel中把一列数据中第一个空格前后的内容分为两列设原内容在A列，则12B1=LEFT(A1,FIND(&quot;&quot;,A1))C1=MID(A1,FIND(&quot;&quot;,A1)+1,LEN(A1)) 在一组数据中筛选包含另一组数据的某个数据的单元 使用MATCH(A2,$B$2:$B$13,0) 公式里第三个参数的含义： 返回结果为位置，如果只需要知道是否存在则可用： IF(MATCH(A2,$B$2:$B$13,0)&gt;0,TRUE)","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"mysql","slug":"sql","date":"2019-03-14T02:36:37.000Z","updated":"2019-03-15T03:13:11.963Z","comments":true,"path":"2019/03/14/sql/","link":"","permalink":"https://github.com/RShit/2019/03/14/sql/","excerpt":"","text":"mysql删除语句使用：1delete t from table_name t where t.id = 1","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"服务器桌面端差异","slug":"务器桌面端差异","date":"2019-03-14T02:35:44.000Z","updated":"2019-03-14T02:36:10.402Z","comments":true,"path":"2019/03/14/务器桌面端差异/","link":"","permalink":"https://github.com/RShit/2019/03/14/务器桌面端差异/","excerpt":"","text":"javax.net.ssl.SSLKeyException: RSA premaster secret error错误的解决办法： 找到jre环境的lib/ext/sunjce_provider.jar 把这个放到程序的lib下","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"maven","slug":"ven","date":"2019-03-14T01:55:10.000Z","updated":"2019-03-14T01:57:32.631Z","comments":true,"path":"2019/03/14/ven/","link":"","permalink":"https://github.com/RShit/2019/03/14/ven/","excerpt":"","text":"maven导出所有使用的jar包: mvn dependency:copy-dependencies -DoutputDirectory=lib -DincludeScope=compile","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"cmd运行java","slug":"d运行java","date":"2019-03-14T01:52:01.000Z","updated":"2019-03-14T01:58:12.324Z","comments":true,"path":"2019/03/14/d运行java/","link":"","permalink":"https://github.com/RShit/2019/03/14/d运行java/","excerpt":"","text":"用命令行编译运行带有包或使用外部jar包的情况12345编译：javac -Djava.ext.dirs=./lib Test.java 或 javac -Djava.ext.dirs=D:/javacode/lib运行：java -Djava.ext.dirs=./lib Test 将日志保存至文件中：java -Djava.ext.dirs=./lib Test &gt;&gt; log.txt","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"notepad++ 字符串匹配","slug":"tepad-字符串匹配","date":"2019-03-12T03:35:56.000Z","updated":"2019-03-12T03:38:32.201Z","comments":true,"path":"2019/03/12/tepad-字符串匹配/","link":"","permalink":"https://github.com/RShit/2019/03/12/tepad-字符串匹配/","excerpt":"","text":"匹配模式查找：a.+?da 表示查找以a开头a结尾的","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"python","slug":"python","date":"2019-03-12T03:33:14.000Z","updated":"2019-03-12T03:35:07.866Z","comments":true,"path":"2019/03/12/python/","link":"","permalink":"https://github.com/RShit/2019/03/12/python/","excerpt":"","text":"格式化字符串各符号表示：%d - 整数 %s - 字符串 %f - 浮点数 %x - 十六进制整数 实例print(&apos;%2d-%02d&apos; % (3, 1)) print(&apos;%.2f&apos; % 3.1415926) 解释： %后数字若为一位表示位数，如若两位，第一位是补充数字，第二位是位数 浮点数前加. %%表示转义为%","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"windows","slug":"ndows","date":"2019-03-12T03:24:47.000Z","updated":"2019-03-12T03:27:00.409Z","comments":true,"path":"2019/03/12/ndows/","link":"","permalink":"https://github.com/RShit/2019/03/12/ndows/","excerpt":"","text":"windows特殊字符版权符号：alt+169 © 拼音：版权 ©","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"docker&tomcat","slug":"cker-tomcat","date":"2019-03-12T03:08:00.000Z","updated":"2019-03-13T01:39:42.584Z","comments":true,"path":"2019/03/12/cker-tomcat/","link":"","permalink":"https://github.com/RShit/2019/03/12/cker-tomcat/","excerpt":"","text":"docker 简介 image(镜像)：对比iso镜像文件，不可操作，只能被pull下载下来使用或push将自己的镜像上传上去 container(容器): 对比iso镜像中的live cd模式，不用直接安装需要的东西即可直接使用。但是一旦容器关闭，那么在容器中安装的vim或gcc都将会被销毁。如果要保存这些，就需要将当前容器封装成自己的镜像。 repository(仓库)： 类似于git，既可以将自己在git上下载下来的代码上传上去，也可以将自己上传上去的代码下载下来。只需要有别人的镜像的名字，标签。自己也可以将自己的镜像设置为私有。 docker 启动和停止1234停止当前tomcat应用：docker-compose down启动tomcat应用：docker-compose up -d docker compose映射端口将容器的8000端口映射到宿主机上的7001端口: docker compose run -p 7001:8000 web python a.py runserver 0.0.0.0:8000 使用-p命令映射端口后，访问web应用需访问宿主机的端口7001 启动注意docker compose run启动一个容器时，如果service中有--link指定的其他服务没有运行，会先运行这些服务，–link依赖的这些服务都运行后，才会执行指定的命令。如果不想启动依赖的其他服务，可以使用--no-deps标识。docker compnse run --no-deps web python manage.py shell","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"jfinal","slug":"inal","date":"2019-03-12T03:07:45.000Z","updated":"2019-03-13T01:41:41.089Z","comments":true,"path":"2019/03/12/inal/","link":"","permalink":"https://github.com/RShit/2019/03/12/inal/","excerpt":"","text":"jfinal 文件上传特殊处理如果页面中form中有enctype=&quot;multipart/form-data&quot;属性，在后台接收数据时先使用getFile，再使用getPara();","categories":[],"tags":[],"author":"刘奶奶找牛奶奶买榴莲牛奶"},{"title":"js特殊用法","slug":"js特殊用法","date":"2019-03-12T03:00:30.000Z","updated":"2019-05-10T09:55:45.336Z","comments":true,"path":"2019/03/12/js特殊用法/","link":"","permalink":"https://github.com/RShit/2019/03/12/js特殊用法/","excerpt":"","text":"jquery获取jsonJS里使用 $!{string} 获取原格式的字符串； 出现此种错误时，将${} 改为$!{} 使用 js 动态元素选择器123var i=1;var head=\"head\"+i;$(\"#\"+head+\"\"); 使用js处理双击、选中事件jquery 处理方式1$(document.body).on('mouseup',\"#content\",mouseUp); dom处理方式：1document.addEventListener(\"dblclick\", doubleClick, true); 释放鼠标处理函数123456789101112function mouseUp() &#123; var text = \"\"; if (window.getSelection) &#123; text = window.getSelection().toString(); &#125; else if (document.selection &amp;&amp; document.selection.type != \"Control\") &#123; text = document.selection.createRange().text; &#125; if (\"\" != text&amp;&amp;\" \" != text) &#123; $(\"#checkText\").val(text); layer.msg(text); &#125;&#125; js计算1234parseInt(5/2); 舍弃小数部分，取整数Math.ceil(5/2);向上取整，有小时就整数加一Math.round(5/2);四舍五入Math.floor(5/2);向下取整 js给指定一篇文章添加行号123456789101112131415161718192021222324252627282930313233343536373839404142434445function getLineNum()&#123;var $lineNum=$(\"#lineNum\");$lineNum.empty();var rowNum=Math.round(document.getElementById(\"contentT\").scrollHeight/parseFloat($(\"#contentT\").css(\"line-height\")));console.log(\"$('.article fl').height():\"+document.getElementById(\"contentT\").scrollHeight);console.log(\"parseFloat($('.article fl').css('line-height')):\"+parseFloat($(\"#contentT\").css(\"line-height\")));console.log(rowNum);for(var i=1;i&lt;rowNum;i++)&#123; var flag=false; if(headNum&gt;1)&#123; for(var j=2;j&lt;=headNum;j++)&#123; var headId=\"head\"+j; var $headEle=$(\"#\"+headId+\"\"); var offsetTop=$headEle.position().top; var headRow=Math.round(offsetTop/parseFloat($(\"#contentT\").css(\"line-height\"))); headRow=headRow+1; if(headRow==i)&#123; flag=true; break; &#125; &#125; &#125; if(flag)&#123; if(i%5==0||i==1)&#123; $lineNum.append(\"&lt;br&gt;&lt;p&gt;\"+i+\"&lt;/p&gt;\"); &#125;else&#123; $lineNum.append(\"&lt;br&gt;&lt;br&gt;\"); &#125; &#125;else&#123; if(i%5==0)&#123; $lineNum.append(\"&lt;p&gt;\"+i+\"&lt;/p&gt;\"); &#125;else if(i==1)&#123; $lineNum.append(\"&lt;p&gt;\"+i+\"&lt;/p&gt;\"); &#125;else&#123; $lineNum.append(\"&lt;br&gt;\"); &#125; &#125;&#125;&#125;; js对象转换jquery对象dom对象dom对象转换为jquery对象：12var d=document.getElementById(\"id\"); //对象d为DOM对象var s=$(d); //对象s为Jquery对象 jquery对象转换为dom对象：123var d=document.getElementById(\"id\"); //对象d为DOM对象var s=$(d); //对象s为Jquery对象var dd=s.get(0) //对象dd为DOM对象 js随机打乱数组 123456 1.function randomsort(a, b) &#123; return Math.random()&gt;.5 ? -1 : 1; //用Math.random()函数生成0~1之间的随机数与0.5比较，返回-1或1&#125;var arr = [1, 2, 3, 4, 5];arr.sort(randomsort);","categories":[],"tags":[]},{"title":"html","slug":"html","date":"2019-03-08T07:24:00.000Z","updated":"2019-03-14T01:51:03.294Z","comments":true,"path":"2019/03/08/html/","link":"","permalink":"https://github.com/RShit/2019/03/08/html/","excerpt":"","text":"form表单外不同的按钮提交到不同的url1234567891011121314151617181920&lt;form hidden=&quot;&quot; id=&quot;form&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;text&quot; value=&quot;&quot; name=&quot;rel&quot; id=&quot;rel&quot;&gt; &lt;input type=&quot;text&quot; value=&quot;&quot; name=&quot;answer&quot; id=&quot;answer&quot;&gt; &lt;input type=&quot;text&quot; value=&quot;&quot; name=&quot;curPage&quot; id=&quot;curPage&quot;&gt; &lt;input type=&quot;text&quot; value=&quot;&quot; name=&quot;examName&quot; id=&quot;examName&quot;&gt;&lt;/form&gt;&lt;button typr=&apos;button&apos; id=&apos;but1&apos; class=&apos;but1&apos;&gt;&lt;/button&gt;&lt;button typr=&apos;button&apos; id=&apos;but2&apos; class=&apos;but2&apos;&gt;&lt;/button&gt;&lt;script&gt; $(document).on(&apos;click&apos;,&apos;button.but1&apos;,function()&#123; $(&quot;#form&quot;).attr(&quot;action&quot;,&quot;url&quot;); $(&quot;#form&quot;).submit(); &#125;) $(document).on(&apos;click&apos;,&apos;button.but1&apos;,function()&#123; $(&quot;#form&quot;).attr(&quot;action&quot;,&quot;url&quot;); $(&quot;#form&quot;).submit(); &#125;)&lt;/script&gt;","categories":[],"tags":[],"author":"码农"},{"title":"Hello World","slug":"hello-world","date":"2019-03-07T02:39:24.133Z","updated":"2019-03-07T02:39:24.133Z","comments":true,"path":"2019/03/07/hello-world/","link":"","permalink":"https://github.com/RShit/2019/03/07/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}